name: Push

on:
  push:
    branches:
      - main

env:
  TF_LOG: INFO

permissions:
      id-token: write
      contents: read
jobs: 
  deploy-infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    
    - name: Install Vault CLI
      run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install -y vault

    - name: Retrieve secret from Vault
      uses: hashicorp/vault-action@main

      with:
          method: jwt
          url: ${{ secrets.VAULT_ADDR }}
          role: "github-actions"
          secrets: "secret/github-actions/azure"

    - name: Fetch Secrets from Vault
      env:
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      run: |
        export CLIENT_ID=$(vault kv get -field=client_id secret/github-actions/azure)
        export TENANT_ID=$(vault kv get -field=tenant_id secret/github-actions/azure)
        export SUBSCRIPTION_ID=$(vault kv get -field=subscription_id secret/github-actions/azure)
        export RESOURCE_GROUP_NAME=$(vault kv get -field=resource_group_name secret/github-actions/azure)
        export STORAGE_ACCOUNT=$(vault kv get -field=storage_account secret/github-actions/azure)
        export CONTAINER_NAME=$(vault kv get -field=container_name secret/github-actions/azure)
       

    # Log into Azure with OIDC integration
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Run az commands to confirm sub access
    - name: 'Run az commands'
      run: |
        az account show

    # Run Terraform init
    - name: Terraform Init
      id: init
      env:
        STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: "true"
        ARM_OIDC_TOKEN: ${{ secrets.AZURE_OIDC_TOKEN }}
      run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP_NAME"

    # Run a Terraform apply
    - name: Terraform apply
      id: apply
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: terraform apply -auto-approve